name: Build and Package Linux

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements-linux.txt

    - name: Compile resources
      run: |
        source venv/bin/activate
        cd screenbolt
        python compile_resources.py

    - name: Build with PyInstaller
      run: |
        source venv/bin/activate
        cd packaging/linux
        pyinstaller --clean --noconfirm screenbolt.spec

    - name: Package as .deb
      run: |
        cd packaging/linux
        chmod +x build-deb.sh
        ./build-deb.sh "${GITHUB_REF_NAME}"
        mv screenbolt*.deb ../../

    # - name: Package as .rpm
    #   run: |
    #     cd packaging/linux
    #     chmod +x build-rpm.sh
    #     ./build-rpm.sh "${GITHUB_REF_NAME}"
    #     mv screenbolt*.rpm ../../

    - name: Upload Debian package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: screenbolt-${{ github.ref_name }}.deb
        path: ./screenbolt*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload RPM package as artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: screenbolt-${{ github.ref_name }}.rpm
    #     path: ./screenbolt*.rpm
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          screenbolt*.deb
          # screenbolt*.rpm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}